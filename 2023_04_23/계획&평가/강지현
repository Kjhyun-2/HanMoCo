===============================================================================================================================================
4월 23일 (일요일)

1) 11478 서로다른부분문자
- string으로 입력을 받고 입력 받은 문자에 길이를 구해서 int형 변수에 저장해놓는다.
- 0부터 문자 길이까지 반복을하고 그 다음 문자부터 길이까지 반복을해서 다중 for문을 이용한다.
- 입력받은 문자에서 set으로 잘라서 넣을 문자를 복사하여 저장해놓는다. b라는 변수
- set 알고리즘을 이용하여 중복된 문자는 제거하면서 정렬되어 들어게끔 한다. set.insert(b) 
- b는 반복문이 끝난뒤 초기화해준다. 마지막에 set.size() 크기를 출력한다.
- 이 문제를 풀면서 set 알고리즘에 대하여 공부할수 있었다.

2) 1094 막대기
- 처음 막대기의 값이 64 고정이므로 int형 변수에 64를 넣고 선언해준다.
- 무한for문을 돌려서 현재 막대기의 값이 입력받은 값(얻고자하는 막대기)보다 크면 절반을 제거해야하므로 2로 나누어준다.
- 만약 얻고자하는 막대기가 현재 막대기보다 크다면 현재 막대기를 붙여준다. 즉 얻고자하는 막대기 - 현재 막대기 
- 이 후 막대기를 붙힌 횟수 n++ 증가 시켜준다. 
- 무한 for문을 탈출할 조건은 얻고자하는 막대기 길이가 0이면 break로 빠져나온다.
- 마지막에 막대기를 붙힌 횟수인 n을 출력해준다.
- 처음에 문제 이해가 잘 되지않아서 막대기를 버리고 붙이는 과정을 어떻게 프로그램으로 구현할지 고민이 많이 됐다. 
- 그래서 무한 for문을 탈출할 조건도 보이지 않았으나 구하고자 하는 막대기에서 현재 막대기를 빼다보니 
- 무한루프에서 빠져나가는 조건이 보이기 시작해서 문제를 해결할수 있었다.

3) 11047 동전0
- 이 문제는 코드를 보면 알수있듯이 직관적으로 풀었다.
- 얼마를 만드는데 동전이 몇개 필요한지 최솟값을 구하는 문제로 처음 얼마인지 값을 받고 동전 종류들을 1차원 배열로 받는다.
- 무한반복문을 사용하여 이때는 do while(true)를 사용하여 동전 종류에서의 최댓값을 구하는 방법을 사용했다.
- 조건은 max<동전종류 && 동전종류 <= 구하고자하는 동전
- 구하고자하는 돈에서 가장 큰 단위의 동전을 빼주고 횟수를 증가시켜준다.
- 구하고자하는 돈이 0원이 되면 break문을 통하여 무한루프를 탈출하고 마지막에 횟수를 출력하고 프로그램을 종료시킨다.

4) 1011 Fly me to the Alpha Centauri
- 이 문제는 규칙을 찾기위해 이동거리가 15일때까지 손으로 직접 쓰면서 풀어나갔다.
- 처음 문제 이해하는데도 오래걸렸는데 

