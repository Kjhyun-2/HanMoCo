1. 듣보잡_1764
 - 난이도 : silver 4
 - HashSet d에 N개의 값을 입력한다.
 - contains() 메소드를 이용해 d에 값이 존재할 경우 ArrayList arr에 값을 추가한다.
 - 사전순으로 출력해야하기 때문에 Collections.sort()를 사용해 정렬한다.
 - arr의 사이즈 및 값을 출력한다.

2. 쓰레기 수거_1680
 - 난이도 : silver 4
 - 쌓인 거리 dis 변수는 0으로 초기화, 현재 쓰레기 차에 넣을 수 있는 양 what 변수에 입력받은 총 용량으로 초기화한다.
 - what에서 wi(입력받은 각 지점의 양)을 뺀 값이 0보다 클 경우, dis에 "각지점 거리 x 2" 값을 더하고 what은 총용량에서 각 지점 쓰레기 양을 뺀 값으로 바꾼다.
 - 뺀 값이 0일 경우, dis에 "각지점 거리 x 2" 값을 더하고 what은 총용량으로 값을 바꾼다.
 - 뺀 값이 0보다 작을 경우, what에서 각 지점 쓰레기 양을 뺀다. 
 - 위 과정을 모두 반복한 뒤 마지막 지점일 때 해당 거리를 더한 뒤 종료한다.
 
 3. 숫자카드_10815
 - 난이도 : silver 5
 - HashSet, ArrayList 사용
 - HashSet과 ArrayList를 사용해 N개의 카드와 M개의 카드 값을 각각 저장한다.
 - ArrayList에 저장된 값이 HashSet에 존재한다면 true라는 값을 출력하기 때문에 그 값이 true이면 1을, false이면 0을 출력하도록 한다.
 - HashSet과 ArrayList 둘 중 하나만 써도 구현 가능하다.
 
 4. 하노이 탑 이동순서_11729
 - 난이도 : silver 1
 - 1. 탑의 맨 밑을 빼고 n-1개의 탑을 목적지 외 다른곳으로 이동시킨다.
 - 2. 맨 밑 탑을 목적지로 이동한다.
 - 3. 목적지 외 다른곳에 두었던 n-1개의 탑을 목적지도 이동한다.
 - 위 3가지의 경우를 재귀를 통해 반복해서 구한다. 
 - 움직인 총 횟수는 위 3가지 경우를 반복할때마다 cnt에 1을 더해서 구한다.
 - 단 n이 1일 경우는 횟수는 1이고 시작점과 목적지를 출력한다.
