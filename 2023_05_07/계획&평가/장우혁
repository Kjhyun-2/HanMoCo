1764
 - 듣도 못한사람을 String배열에 넣어주기.
 - 보도 못한사람을 듣도 못한사람과 비교해서 같으면 배열에 넣어줄건데, 이때 몇개가 같을지 모르니 ArrayList를 사용해서 요소를 추가함
 - Collections.sort()를 이용하여 ArrayList를 정렬시켜준다.
 - for each문을 사용하여 ArrayList의 내용 출력 

1680
 - 테스트케이스가 주어지기 때문에 while문을 활용하여 테스트케이스 개수만큼 반복한다.
 - 지점까지의 거리와 쓰레기의 양은 매 반복마다 개수가 달라지기 때문에 배열말고 ArrayList를 사용하여 선언해준다.
 - 첫 지점으로 갈때만 x의 0번째 인덱스 원소를 그냥 더해주고, 나머지 두번째, 세번째 지점으로 갈땐 현재 위치와 다음 갈 지점의 위치값을 빼준다(일직선상에 있기 때문)
 - 쓰레기차의 용량이 같거나 초과한 경우는 현재 위치부터 소각장까지 갔다가 온다. (현재위치 *2)
 - while문에서 새로운 반복문을 돌리기 전에 마지막 지점에서 소각장으로 다시 돌아오는 거리를 더해주고, 모든 항목을 0으로 초기화 해준다.

10818
 - for문 두개를 이용하여 찾는 방법을 사용하면 시간초과가 뜬다. 이러한 방법보다 시간복잡도가 더 작은 이분탐색을 이용하여 문제를 풀었다.
 - 이분탐색을 위해 상근이가 갖고있는 숫자카드를 오름차순으로 정렬해준다.
 - 숫자카드를 하나씩 입력받아서 이분탐색을 해준다.
 - 찾는 숫자가 있다면 boolean형의 number변수를 true로 바꿔주고, 찾는 숫자가 없다면 number를 false인 상태로 둔다.
 - while문을 탈출하고 number가 false라면 0을, true라면 1을 출력해준다.

11729
 - 하노이 탑 문제는 학교 수업시간에 재귀함수의 대표적인 예라고 배워서 대충 알고 있었다. 근데 이는 이동 횟수를 구하는법만 이해하고 있었지 원판이 어디서 어디로 이동했는지 출력하는것은 예상 밖이었다….
 - 인터넷의 힘을 빌려 어떻게 푸는지 이해하고 다시 풀어보았다.
 - 크게 세개로 나누어서 풀 수 있다.
 - 1. 가장 큰 원반을 C로 옮기기 위해 N-1개의 원판을 A에서 B로 옮겨준다.
 - 2. 가장 큰 원반을 C로 옮겨준다(1회)
 - 3. 나머지 N-1개의 원반을 C로 옮겨준다.
 - A에서 B로 이동하는 함수를 재귀적으로 호출하여 이동해야 할 원판이 1개가 되면 그때 A에서 B로 이동했다는 것을 출력한뒤 함수를 return한다.
 - 출력이 끝나면 B에서 C로 이동하도록 다시 재귀호출을 한다.
