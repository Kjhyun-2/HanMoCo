1. 짐 챙기는 숌_1817
 - 난이도 : silver 5
 - N과 M의 값을 받은 후 max변수를 M으로 초기화한다. 
 - max - num이 0 이상일 때, max에서 num을 뺀다.
 - max - num이 음수일 때, max는 다시 M으로 초기화하고 max에서 num을 뺀다. 그리고 cnt에 1을 더해 상자 개수를 더한다.

2. 생일_5635
 - 난이도 : silver 5
 - N행 4열의 2차원 배열을 생성한 뒤 각 인덱스에 값을 넣는다. (이름, 일, 월, 년 순으로)
 - 1번 사람의 년도에서 2번 사람의 년도를 뺐을 때, 음수이면 위치를 바꾸지 않고 양수이면 위치를 바꾼다.
 - 만약 년도가 같다면 월을 비교, 월도 같다면 일을 비교해서 정렬을 한다.
 - 정렬된 배열의 가장 마지막 사람의 이름과 가장 첫번째 사람의 이름을 출력한다.
 
 3. 다이나믹이 뭐예요?_14494
 - 난이도 : silver 3
 - 이차원배열을 사용
 - [0][0]번째 값은 1로 초기화하고 그 외 값은 0으로 초기화한다.
 - [n][m]번째까지 나열해보며 규칙을 찾는다.
 - arr[n][m]은 arr[i-1][j] + arr[j][i-1] + arr[i-1][j-1] 의 값이다.
 -이중 for문을 사용해 계산한 뒤 출력한다.
 
 4. 접미사 배열_11656
 - 난이도 : silver 4
 - 배열 s에 각 알파벳을 하나씩 넣는다.
 - 2중 for문을 사용해서 st의 i번째(0부터) 값에 s의 j(i+1)부터 끝까지의 값을 넣는다.
 - Arrays.sort를 사용해 st를 정렬한 다음 모두 출력한다.
